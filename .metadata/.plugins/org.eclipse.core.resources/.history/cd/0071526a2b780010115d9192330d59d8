package com.tg.educonnect.appointmentservice.feignclient;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.tg.educonnect.appointmentservice.dto.CourseDTO;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@FeignClient(name = "courseservice")
public interface CourseClient {

    @GetMapping("/course/{courseId}")
    @CircuitBreaker(name = "courseServiceCB", fallbackMethod = "getCourseByIdFallback")
    CourseDTO getCourseById(@PathVariable("courseId") Long courseId);

    
    default CourseDTO getCourseByIdFallback(Long courseId, Throwable throwable) {
        System.err.println("Fallback triggered for courseId " + courseId + " due to: " + throwable.getMessage());
        return new CourseDTO(null, "Unavailable - Please try later", null, null, null);
    }
}
