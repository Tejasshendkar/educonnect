package com.tg.educonnect.appointmentservice.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.tg.educonnect.appointmentservice.entity.Appointment;
import com.tg.educonnect.appointmentservice.service.AppointmentService;

@RestController
@RequestMapping("/appointment")
public class AppointmentController {

	@Autowired
	private AppointmentService appointmentService;

	@GetMapping
	public ResponseEntity<List<Appointment>> getAllAppointment() {
		return new ResponseEntity<List<Appointment>>(appointmentService.getAllAppointment(), HttpStatus.OK);
	}

	@GetMapping("/{appointmentId}")
	public ResponseEntity<Appointment> getAppointmentById(@PathVariable Long appointmentId) {
		return new ResponseEntity<Appointment>(appointmentService.getAppointmentById(appointmentId), HttpStatus.OK);
	}

	@GetMapping("/{userId}")
	public ResponseEntity<List<Appointment>> getAllAppointmentByUserId(@PathVariable Long userId) {
		return new ResponseEntity<List<Appointment>>(appointmentService.getAllAppointmentByUserId(userId),
				HttpStatus.OK);
	}
	
	
	@GetMapping("bydate/{date}")
	public ResponseEntity<?> getAllAppointmentByDate(@PathVariable LocalDate date){
		return new ResponseEntity<>(appointmentService.getAllAppointmentByDate(date),HttpStatus.OK);
	}

	@GetMapping("/bystatus/{status}")
	public ResponseEntity<?> getAllAppointmentByStatus(@PathVariable String status){
		return new ResponseEntity<>(appointmentService.getAppointmentByStatus(status),HttpStatus.OK);
	}
	
	@PostMapping
	public ResponseEntity<Appointment> takeAppointment(@RequestBody Appointment appointment) {
		return new ResponseEntity<Appointment>(appointmentService.createAppointment(appointment), HttpStatus.CREATED);
	}
	
	@DeleteMapping("/{appointmentId}")
	public ResponseEntity<Appointment> deleteAppointment(@PathVariable Long appointmentId){
		return new ResponseEntity<Appointment>(appointmentService.cancalAppointment(appointmentId),HttpStatus.OK);
	}
	
	
	

}
